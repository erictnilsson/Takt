{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/authGuard/auth.guard.ts","webpack:///./src/app/services/authentication/authentication.service.ts","webpack:///./src/app/services/error/error.service.ts","webpack:///./src/app/services/httpInterceptor/http-interceptor.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./modules/dashboard/dashboard.module\": [\n\t\t\"./src/app/modules/dashboard/dashboard.module.ts\",\n\t\t\"default~modules-dashboard-dashboard-module~modules-room-room-module\",\n\t\t\"modules-dashboard-dashboard-module\"\n\t],\n\t\"./modules/login/login.module\": [\n\t\t\"./src/app/modules/login/login.module.ts\",\n\t\t\"modules-login-login-module\"\n\t],\n\t\"./modules/room/room.module\": [\n\t\t\"./src/app/modules/room/room.module.ts\",\n\t\t\"default~modules-dashboard-dashboard-module~modules-room-room-module\",\n\t\t\"modules-room-room-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './authGuard/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: './modules/login/login.module#LoginModule'\n    // not guarded by AuthGuard\n  },\n  {\n    path: 'dashboard',\n    loadChildren: './modules/dashboard/dashboard.module#DashboardModule',\n    canActivate: [AuthGuard] // guarded by AuthGuard\n  },\n  {\n    path: 'room',\n    loadChildren: './modules/room/room.module#RoomModule',\n    canActivate: [AuthGuard] // guarded by AuthGuard\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Takt-frontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HttpInterceptorService } from './services/httpInterceptor/http-interceptor.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorService, multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthenticationService, private router: Router) { }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | boolean {\n    if (!this.authService.isLoggedIn()) {\n      this.router.navigateByUrl('');\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { RouterLinkWithHref, Router } from '@angular/router';\nimport { Url } from 'url';\nimport { JwtResponse } from 'src/app/models/responses/jwtResponse';\nimport { ErrorService } from '../error/error.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  private readonly authUrl: string;\n\n  constructor(private errorService: ErrorService, private http: HttpClient, private router: Router) {\n    this.authUrl = '/api/auth/';\n  }\n\n  public getAuthenticationUrl(): Observable<Url> {\n    return this.http.get<Url>(this.authUrl + 'get_auth_uri');\n  }\n\n  public getAuthenticationCode(code: string): void {\n    this.http.get<JwtResponse>(this.authUrl + 'authenticate?code=' + code)\n      .subscribe(response => this.setToken(response.token),\n        (error) => this.errorService.handleError(error),\n        () => {\n          window.opener.location.href = '/dashboard';\n          window.close();\n        });\n  }\n\n  public isLoggedIn(): boolean {\n    const userPayload = this.getUserPayload();\n    return (userPayload) ? userPayload.exp > Date.now() / 1000 : false;\n  }\n\n  public logout(): void {\n    this.http.get<JwtResponse>(this.authUrl + 'logout').subscribe(msg => console.log(msg));\n    this.deleteToken();\n    this.router.navigate(['']);\n    \n  }\n\n  public getToken(): string {\n    return localStorage.getItem('token');\n  }\n\n  public hasToken(): boolean {\n    return this.getToken() != null ? true : false;\n  }\n\n  private setToken(token: string): void {\n    localStorage.setItem('token', token);\n  }\n\n\n  private deleteToken(): void {\n    localStorage.removeItem('token');\n  }\n\n  public getUserPayload(): any {\n    const token = this.getToken();\n    if (token) {\n      const userPayload = atob(token.split('.')[1]);\n      return JSON.parse(userPayload);\n    } else {\n      return null;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n  private errorSubject: Subject<string>;\n  constructor() {\n    this.errorSubject = new Subject<string>();\n  }\n\n  public handleError(error: any): void {\n    this.errorSubject.next(error.toString());\n  }\n\n  public getErrorSubject(): Subject<string> {\n    return this.errorSubject;\n  }\n\n  public logError(error: any): void {\n    console.error(error);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\nimport { ErrorService } from '../error/error.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpInterceptorService implements HttpInterceptor {\n\n  constructor(private authService: AuthenticationService, private errorService: ErrorService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\n    if (this.authService.hasToken()) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: 'Bearer ' + this.authService.getToken()\n        }\n      });\n    } else {\n      this.errorService.logError('No available token found');\n    }\n    return next.handle(request);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}